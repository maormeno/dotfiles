#!/usr/bin/env node

// Magic project opener: opens repository using fuzzy search.
//
// Should be used via Bash alias like this:
//   function j { cd "$("$HOME/dotfiles/bin/j" $1)"; }
//
// Optional environmental variables:
//   WORK_PROJECTS_DIR="~/unicorn"
//
// Author: Artem Sapegin, sapegin.me
// License: MIT
// https://github.com/sapegin/dotfiles
//

import path from 'path';
import fs from 'fs';
import untildify from 'untildify';
import dotenv from 'dotenv';

dotenv.config({ path: untildify('~/.env') });

const PERSONAL_PROJECTS_DIR = '~/_';
const WORK_PROJECTS_DIR = process.env.WORK_PROJECTS_DIR;
const EXTRA_PROJECTS = ['~', ['dotfiles']];

const getDirs = (d) =>
	fs.readdirSync(d).filter((f) => fs.statSync(path.join(d, f)).isDirectory());

const tryRepo = (dir, query, dirs) => {
	const repo = find(dirs ?? getDirs(dir), query);

	if (repo) {
		console.log(path.join(dir, repo));
		process.exit(0);
	}
};

function find(repos, name) {
	// Fuzzy search but require the first letter to match
	const nameRegexp = new RegExp(
		`^${name
			.replace(/[^a-z0-9]/gi, '')
			.split('')
			.join('.*')}`,
		'i'
	);
	repos = repos.filter((r) => nameRegexp.test(r));

	// Order by repo name length, shortest names first
	repos.sort((a, b) => (a.length > b.length ? 1 : -1));

	// Return the most probable result
	return repos?.[0];
}

const args = process.argv.splice(2);
if (args.length !== 1) {
	console.log('Usage: j <name>');
	process.exit(1);
}

// Personal projects
tryRepo(untildify(PERSONAL_PROJECTS_DIR), args[0]);

// Work projects
if (WORK_PROJECTS_DIR) {
	tryRepo(untildify(WORK_PROJECTS_DIR), args[0]);
}

// Extra projects
tryRepo(
	untildify(EXTRA_PROJECTS[0]),
	args[0],
	EXTRA_PROJECTS[1].map(untildify)
);

console.log('Repository not found');
