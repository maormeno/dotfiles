[
  /*
   * Internal functions
   */
  {
    "key": "cmd+e",
    "command": "workbench.action.quickOpenPreviousEditor"
  },
  {
    "key": "cmd+g",
    "command": "workbench.action.gotoLine"
  },
  {
    "key": "cmd+y",
    "command": "editor.action.deleteLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+d",
    "command": "editor.action.duplicateSelection",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+g",
    "command": "editor.action.addSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "alt+down",
    "command": "editor.action.insertCursorBelow",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+r",
    "command": "workbench.action.tasks.runTask"
  },
  {
    "key": "alt+cmd+down",
    "command": "editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+down",
    "command": "-editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+cmd+up",
    "command": "editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+up",
    "command": "-editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+f6",
    "command": "editor.action.rename",
    "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "f2",
    "command": "-editor.action.rename",
    "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+t",
    "command": "-workbench.action.showAllSymbols"
  },
  {
    "key": "alt+enter",
    "command": "editor.action.quickFix",
    "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
  },
  {
    "key": "cmd+.",
    "command": "-editor.action.quickFix",
    "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+r",
    "command": "-editor.action.refactor",
    "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
  },
  {
    // Focus on search results when pressing Enter in the search box
    "key": "enter",
    "command": "search.action.focusNextSearchResult",
    "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible"
  },
  {
    "key": "cmd+alt+j",
    "command": "workbench.action.toggleMaximizedPanel",
    "when": "panelVisible"
  },
  {
    "comment": "Open Source control pane",
    "key": "cmd+shift+g",
    "command": "workbench.scm.focus",
    "when": "workbench.scm.active"
  },
  {
    "key": "ctrl+shift+g",
    "command": "-workbench.view.scm",
    "when": "workbench.scm.active"
  },
  {
    "key": "alt+cmd+enter",
    "command": "git.sync",
    "when": "workbench.scm.visible"
  },
  {
    "key": "cmd+k alt+cmd+s",
    "command": "-git.stageSelectedRanges",
    "when": "isInDiffEditor && !operationInProgress"
  },
  {
    "comment": "Stage currently open file",
    "key": "ctrl+s",
    "command": "git.stage"
  },
  {
    "key": "shift+cmd+c",
    "command": "git.viewChanges"
  },
  {
    "key": "shift+cmd+c",
    "command": "-workbench.action.terminal.openNativeConsole",
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+right",
    "command": "editor.unfold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "alt+cmd+]",
    "command": "-editor.unfold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+left",
    "command": "editor.fold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "alt+cmd+[",
    "command": "-editor.fold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "comment": "Open list of GitHub pull requests in sidebar",
    "key": "shift+cmd+h",
    "command": "pr:github.focus"
  },
  {
    "key": "shift+cmd+h",
    "command": "-workbench.action.replaceInFiles"
  },

  {
    "comment": "Close panel when pressing Escape in the editor",
    "key": "escape",
    "command": "workbench.action.closePanel",
    "when": "panelVisible && textInputFocus && !suggestWidgetVisible"
  },
  {
    "comment": "Close panel when pressing Escape inside the Search panel",
    "key": "escape",
    "command": "workbench.action.closePanel",
    "when": "activePanel == 'workbench.view.search' && panelFocus"
  },
  {
    "comment": "Close panel when pressing Escape inside the Problems panel",
    "key": "escape",
    "command": "workbench.action.closePanel",
    "when": "activePanel == 'workbench.panel.markers' && panelFocus"
  },
  {
    "comment": "Close panel when pressing Escape inside the Integrated Terminal panel",
    "key": "escape",
    "command": "workbench.action.closePanel",
    "when": "terminalFocus"
  },
  {
    "key": "cmd+space",
    "command": "git.stage",
    "when": "workbench.scm.active"
  },
  {
    "comment": "Go Forward (Ctrl++) -- to better match Go Back (Ctrl+-)",
    "key": "ctrl+=",
    "command": "workbench.action.navigateForward",
    "when": "canNavigateForward"
  },
  {
    "key": "ctrl+shift+-",
    "command": "-workbench.action.navigateForward",
    "when": "canNavigateForward"
  },

  {
    "key": "cmd+space",
    "command": "editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+space",
    "command": "-editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
  },
  // Not sure I need it together with Cmd+B, though it could be nice to open Explorer
  // every time, and not just whatever was last in the sidebar
  {
    "comment": "Focus on Explorer",
    "key": "shift+cmd+\\",
    "command": "workbench.files.action.focusFilesExplorer"
  },
  {
    "comment": "Don't autocomplete on Enter, just on Tab: more ways to get rid of the autocomplete when you don't need it",
    "key": "enter",
    "command": "-acceptSelectedSuggestion",
    "when": "acceptSuggestionOnEnter && suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && suggestionMakesTextEdit && textInputFocus"
  },
  {
    "comment": "Don't autocomplete on Enter in terminal, just on Tab: more ways to get rid of the autocomplete when you don't need it",
    "key": "enter",
    "command": "-workbench.action.terminal.acceptSelectedSuggestion",
    "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
  },
  {
    "comment": "Show list of profiles",
    "key": "f10",
    "command": "workbench.profiles.actions.switchProfile"
  },
  {
    "key": "f10",
    "command": "-extension.node-debug.startWithStopOnEntry",
    "when": "!inDebugMode && debugConfigurationType == 'node' || !inDebugMode && debugConfigurationType == 'pwa-extensionHost' || !inDebugMode && debugConfigurationType == 'pwa-node'"
  },
  {
    "key": "f10",
    "command": "-workbench.action.debug.stepOver",
    "when": "debugState == 'stopped'"
  },

  /*
   * Plugins
   */

  // New File Now
  {
    "key": "cmd+n",
    "command": "newFileNow.createNewFile"
  }
]
